!SESSION 2012-04-26 11:16:28.906 -----------------------------------------------
eclipse.buildId=I20120127-1145
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.ui 4 0 2012-04-26 13:22:22.437
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException: The selected element org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl@c1e604 (elementId: org.eclipse.e4.ui.compatibility.editor, tags: [Editor, removeOnHide], contributorURI: null) (widget: null, renderer: null, toBeRendered: false, onTop: false, visible: true, containerData: null, accessibilityPhrase: null) (contributionURI: bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor, object: null, context: null, variables: [], label: SceneDetails.java, iconURI: platform:/plugin/org.eclipse.jdt.ui//icons/full/obj16/jcu_obj.gif, tooltip: EchoesJava/src/pedagogicComponent/SceneDetails.java, dirty: false, closeable: true, description: null) must be visible in the UI presentation
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:164)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.SplitDropAgent.dock(SplitDropAgent.java:326)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.SplitDropAgent.drop(SplitDropAgent.java:161)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.finishDrag(DnDManager.java:220)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:198)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager$1$1.dragDetected(DnDManager.java:109)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1053)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:999)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:893)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:85)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:579)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:534)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:352)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:624)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:579)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1433)

!ENTRY org.eclipse.search 4 0 2012-04-26 14:12:20.515
!MESSAGE Problems encountered during text search.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.515
!MESSAGE File 'EchoesJava/src/pedagogicComponent/SceneHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/SceneDetails.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneDetails.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneDetails.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/SceneDetails.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/RuleBasedChildModel.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/RuleBasedChildModel.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/RuleBasedChildModel.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/RuleBasedChildModel.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/Reminder.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Reminder.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Reminder.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Reminder.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/PractitionerServer.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PractitionerServer.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PractitionerServer.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PractitionerServer.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/PedagogicComponentImpl.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentImpl.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentImpl.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentImpl.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/PedagogicComponentApp.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentApp.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentApp.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.609
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PedagogicComponentApp.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.609
!MESSAGE File 'EchoesJava/src/pedagogicComponent/PCcontrolPanel.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcontrolPanel.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcontrolPanel.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcontrolPanel.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/PCcomponents.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcomponents.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcomponents.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/PCcomponents.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/NonAgentSceneHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/NonAgentSceneHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/NonAgentSceneHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/NonAgentSceneHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/GoalsForActivityReasoner.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/GoalsForActivityReasoner.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/GoalsForActivityReasoner.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/GoalsForActivityReasoner.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/EngagementHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/EngagementHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/EngagementHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/EngagementHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/DMandAEdirector.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/DMandAEdirector.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/DMandAEdirector.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/DMandAEdirector.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/CurrentSystemState.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/CurrentSystemState.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/CurrentSystemState.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/CurrentSystemState.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/ChildStateHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildStateHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildStateHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildStateHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/ChildActionHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildActionHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildActionHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ChildActionHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/AvailableActionsReference.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AvailableActionsReference.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AvailableActionsReference.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AvailableActionsReference.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/AgentInvolvementHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentInvolvementHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentInvolvementHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentInvolvementHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/AgentBehaviourHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentBehaviourHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentBehaviourHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.640
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/AgentBehaviourHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.640
!MESSAGE File 'EchoesJava/src/pedagogicComponent/ActivityRecord.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityRecord.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityRecord.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityRecord.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/pedagogicComponent/ActivityDurationHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityDurationHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityDurationHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityDurationHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/pedagogicComponent/ActivityAndObjectHandler.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityAndObjectHandler.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityAndObjectHandler.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/ActivityAndObjectHandler.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/pedagogicComponent/Activity.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Activity.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Activity.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/pedagogicComponent/Activity.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/echoesEngine/ActionNameConverter.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionNameConverter.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionNameConverter.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionNameConverter.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/echoesEngine/ActionEngineImpl.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionEngineImpl.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionEngineImpl.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/echoesEngine/ActionEngineImpl.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/dramaManager/SceneDetails.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneDetails.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneDetails.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneDetails.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/dramaManager/SceneAndObjectDirector.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndObjectDirector.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndObjectDirector.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndObjectDirector.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/dramaManager/SceneAndActivitiesMonitor.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndActivitiesMonitor.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndActivitiesMonitor.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/SceneAndActivitiesMonitor.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/dramaManager/DramaManagerImpl.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/DramaManagerImpl.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/DramaManagerImpl.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/DramaManagerImpl.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/dramaManager/ActivityDetails.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/ActivityDetails.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/ActivityDetails.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/dramaManager/ActivityDetails.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/controlPanel/NavigationPanel.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/NavigationPanel.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/NavigationPanel.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/NavigationPanel.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/controlPanel/ChildModelDialog.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/ChildModelDialog.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/ChildModelDialog.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/controlPanel/ChildModelDialog.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/childModel/ChildModelImpl.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelImpl.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelImpl.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelImpl.java'.
!SUBENTRY 1 org.eclipse.search 4 4 2012-04-26 14:12:20.656
!MESSAGE File 'EchoesJava/src/childModel/ChildModelDetails.java' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelDetails.java'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelDetails.java'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:793)
	at org.eclipse.core.internal.resources.File.getContents(File.java:289)
	at org.eclipse.core.internal.resources.File.getContents(File.java:278)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:283)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:277)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:269)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.<init>(FileCharSequenceProvider.java:255)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:36)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:260)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:196)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:172)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:184)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:56)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:182)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2012-04-26 14:12:20.656
!MESSAGE Resource is out of sync with the file system: '/EchoesJava/src/childModel/ChildModelDetails.java'.
!SESSION 2012-04-27 07:22:13.828 -----------------------------------------------
eclipse.buildId=I20120127-1145
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.ui 4 0 2012-04-27 07:47:43.546
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Widget.sendMouseEvent(Widget.java:1110)
	at org.eclipse.swt.widgets.Widget.wmMouseMove(Widget.java:2194)
	at org.eclipse.swt.widgets.Control.WM_MOUSEMOVE(Control.java:5032)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4575)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:341)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4972)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2545)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:999)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:893)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:85)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:579)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:534)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:352)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:624)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:579)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1433)

!ENTRY org.eclipse.jdt.ui 4 10001 2012-04-27 10:01:39.453
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Java Model Status [AgentBehaviourHandler(PCcomponents, IDramaManager, IActionEnginePrx) [in AgentBehaviourHandler [in [Working copy] AgentBehaviourHandler.java [in pedagogicComponent [in src [in EchoesJava]]]]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:495)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:529)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:255)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:241)
	at org.eclipse.jdt.internal.core.SourceMethod.getTypeParameters(SourceMethod.java:134)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks.resolveTypeVariable(JavaElementLinks.java:427)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks.parseURI(JavaElementLinks.java:338)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks$1.changing(JavaElementLinks.java:242)
	at org.eclipse.swt.browser.IE$7.handleEvent(IE.java:499)
	at org.eclipse.swt.ole.win32.OleEventTable.sendEvent(OleEventTable.java:55)
	at org.eclipse.swt.ole.win32.OleEventSink.notifyListener(OleEventSink.java:145)
	at org.eclipse.swt.ole.win32.OleEventSink.Invoke(OleEventSink.java:120)
	at org.eclipse.swt.ole.win32.OleEventSink.access$1(OleEventSink.java:97)
	at org.eclipse.swt.ole.win32.OleEventSink$1.method6(OleEventSink.java:71)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:119)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2545)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3752)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:999)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:893)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:85)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:579)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:534)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:352)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:624)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:579)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1433)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2012-04-27 10:01:39.531
!MESSAGE AgentBehaviourHandler(PCcomponents, IDramaManager, IActionEnginePrx) [in AgentBehaviourHandler [in [Working copy] AgentBehaviourHandler.java [in pedagogicComponent [in src [in EchoesJava]]]]] does not exist

!ENTRY org.eclipse.jdt.core 4 4 2012-04-27 18:40:44.046
!MESSAGE JavaBuilder handling ImageBuilderInternalException while building: EchoesJava
!STACK 1
Java Model Exception: Java Model Status [Garden [in [Working copy] Sky.java [in renderingEngine.environment [in src [in EchoesJava]]]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:495)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:529)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:255)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:241)
	at org.eclipse.jdt.internal.core.Member.getNameRange(Member.java:324)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createProblemFor(AbstractImageBuilder.java:397)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:179)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:510)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:364)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:329)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:301)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:134)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:193)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2012-04-27 18:40:44.046
!MESSAGE Garden [in [Working copy] Sky.java [in renderingEngine.environment [in src [in EchoesJava]]]] does not exist
!SESSION 2012-04-28 10:41:28.609 -----------------------------------------------
eclipse.buildId=I20120127-1145
java.version=1.7.0_03
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2012-04-28 10:42:12.531
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:43.828
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:43.984
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:43.984
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:44.171
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:44.171
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:44.171
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:46.187
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:46.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:46.187
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:46.343
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:46.343
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:46.343
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:47.687
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:47.687
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:47.687
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:47.843
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

public void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:47.843
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:47.843
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:50.921
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

public ststic void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:50.921
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:50.921
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:51.125
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:51.125
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:51.125
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:52.031
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
    
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:52.031
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:52.046
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:52.203
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:52.203
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:52.203
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:53.250
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:53.265
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:53.265
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1079)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:53.515
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:53.515
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:53.515
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:43:58.015
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:43:58.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:43:58.046
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:44:00.406
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:44:00.406
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:44:00.406
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:44:00.843
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:44:00.859
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:44:00.859
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-04-28 13:44:00.937
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package renderingEngine.src;

 




import objects.EchoesObject
import agents.EchoesAgent
import objects.Bubbles
import objects.Plants
import objects.Environment
import echoes
import math
import Logger

public class Collisions
{

  public ststic void objectCollision(o1, o2, app)
  { 
    if (not (hasattr(o1,"id") and hasattr(o2,"id"))
        raise TypeError, "objectCollision not called with valid objects"
    if (not (o1.id in app.canvas.objects and o2.id in app.canvas.objects)
        raise TypeError, "objectCollision objects not yet in object list of canvas, aborting collision"

#    print "Object Collision", o1.id, " X " , o2.id

    if (not hasattr(app, "canvas")
        raise TypeError, "objectCollision not called with valid app instance"  
    
    # two bubbles are merged when colliding
    if (isinstance(o1, objects.Bubbles.EchoesBubble) and isinstance(o2, objects.Bubbles.EchoesBubble) and o1.canMerge and o2.canMerge and o1.interactive and o2.interactive                           
        newPos = ((o1.pos[0] + o2.pos[0]) / 2, (o1.pos[1] + o2.pos[1]) / 2, (o1.pos[2] + o2.pos[2]) / 2 )
        bubble = objects.Bubbles.EchoesBubble(app, false, fadeIn=true, fadingFrames=10)
        bubble.currentRegion = o1.currentRegion # in o1 and o2 region
        bubble.size = max(o1.size, o2.size) * 1.2
        bubble.setStartPos(newPos)
        bubble.floatingXY = o1.floatingXY and o2.floatingXY
        bubble.willBeReplaced = o1.willBeReplaced or o2.willBeReplaced
        bubble.mergedByChild = o1.beingDragged or o2.beingDragged
        bubble.id = app.canvas.addObject(bubble, {"type" "Bubble"})
        if (o1.attachedToAgentId < 0 and o2.attachedToAgentId < 0
            if (o1.beingDragged or o2.beingDragged
                app.canvas.agentPublisher.agentActionCompleted("User", "bubble_merge", [str(o1.id), str(o2.id)])
            else
                app.canvas.agentPublisher.agentActionCompleted("None", "bubble_merge", [str(o1.id), str(o2.id)])
        else
            app.canvas.agentPublisher.agentActionCompleted("Agent", "bubble_merge", [str(o1.id), str(o2.id)])
            if (o1.attachedToAgentId < 0
                agentId = o2.attachedToAgentId
            else
                agentId = o1.attachedToAgentId
            app.canvas.agents[agentId].attachedObjectId = bubble.id
            bubble.attachedToAgentId = app.canvas.agents[agentId].id
            bubble.interactive = false
            bubble.moving = false
            app.canvas.agents[agentId].numBubblesMerged += 1

        if (o1.willBeReplaced or o2.willBeReplaced
            newBubble = objects.Bubbles.EchoesBubble(app, true)
            newBubble.floatingXY = true
        
        app.canvas.rlPublisher.objectPropertyChanged(str(o1.id), "bubble_merge", "")                 
        app.canvas.rlPublisher.objectPropertyChanged(str(o2.id), "bubble_merge", "")                 
        o1.remove()
        o2.remove()
    
    else if ((isinstance(o1, objects.Environment.Pond) and isinstance(o2, objects.Plants.Pot)) or (isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Environment.Pond))
        if (isinstance(o1, objects.Environment.Pond)
            pond = o1
            pot = o2
        else
            pond = o2
            pot = o1
        if (pond.canShrink 
            pot.growFlower()                       
            if (pot.flower and pot.flower.canGrow
                pond.shrink()
                if (pot.beingDragged and not(pot.publishGrowStarted)
                    app.canvas.agentPublisher.agentActionStarted('User', 'flower_grow', [str(pot.id), str(pot.flower.id), str(pond.id)])
                    pot.publishGrowStarted = true
                    pot.growPond = pond.id

    else if (((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o1, objects.Environment.Basket) and isinstance(o2, objects.Plants.Pot)) or 
        (isinstance(o2, objects.Environment.Basket) and isinstance(o1, objects.Plants.Pot)))

        # return pots are not yet fully formed
        if (not (hasattr(o1,"stack") and hasattr(o2,"stack")) return
        # return if (in the same stack
        if (o1.stack and o2.stack and o1.stack == o2.stack return        
        # return if (attached to avatar (stacking is invoked explicitly when caused by the avatar)
        if (o1.avatarTCB or o2.avatarTCB return
        # return if (exactly in the same position (as with adding many and moving them around later)
        if (o1.pos[0]==o2.pos[0] and o1.pos[1]==o2.pos[1] and o1.pos[2]==o2.pos[2] return
        # take into account that they are not as tall as wide
        if ((isinstance(o1, objects.Plants.Pot) and isinstance(o2, objects.Plants.Pot) and
            abs(o1.pos[1]-o2.pos[1]) > 0.65 * (o1.size + o2.size)) return 

        if (o1.pos[1] > o2.pos[1] 
            upper = o1 
            lower = o2
        else
            upper = o2 
            lower = o1

        moving = false
        if (o1.beingDragged or o1.falling
            dx = o1.pos[0] - o2.pos[0]
            dy = o1.pos[1] - o2.pos[1]
            hratio = (o1.size + o2.size + 0.01)/math.hypot(dx, dy)
            newo1x = o2.pos[0] + dx*hratio
            newo1y = o2.pos[1] + dy*hratio
            o1.pos = [newo1x, newo1y, o1.pos[2]]
            moving = true
            o1.stopDrag()            
        if (o2.beingDragged or o2.falling
            if (not moving
                dx = o2.pos[0] - o1.pos[0]
                dy = o2.pos[1] - o1.pos[1]
                hratio = (o2.size + o1.size + 0.01)/math.hypot(dx, dy)
                newo2x = o1.pos[0] + dx*hratio
                newo2y = o1.pos[1] + dy*hratio
                o2.pos = [newo2x, newo2y, o2.pos[2]]
            moving = true
            o2.stopDrag() 

        if (moving
            # stacking - only if (dragged by the user
            if (abs(o1.pos[0] - o2.pos[0]) < (lower.size + upper.size) / 1.5
                if (isinstance(lower, objects.Plants.Pot) and not lower.flower
                    lower.stackUp(upper)
                    # The user did it!
                    # with the introduction of falling, this is not certain anymore...
                    if (isinstance(upper, objects.Plants.Pot)
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_pot', [str(upper.id), str(lower.id)])
                    else
                        app.canvas.agentPublisher.agentActionCompleted('User', 'stack_basket', [str(upper.id), str(lower.id)])

    else if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
        if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Plants.Pot)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o2.flower == o1 return
            o2.flower = o1
            if (o1.basket 
                o1.basket.removeFlower(o1)
                o1.basket = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Plants.Pot)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o1.flower == o2 return
            o1.flower = o2
            if (o2.basket 
                o2.basket.removeFlower(o2)
                o2.basket = None
        else if (isinstance(o1, objects.Plants.EchoesFlower) and isinstance(o2, objects.Environment.Basket)
            o1.inCollision = o2
            if (not o1.beingDragged return
            if (o1 in o2.flowers return
            o2.addFlower(o1)
            if (o1.pot
                o1.pot.flower = None
                o1.pot = None
        else if (isinstance(o2, objects.Plants.EchoesFlower) and isinstance(o1, objects.Environment.Basket)
            o2.inCollision = o1
            if (not o2.beingDragged return
            if (o2 in o1.flowers return
            o1.addFlower(o2)
            if (o2.pot
                o2.pot.flower = None
                o2.pot = None
                
    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Cloud)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Cloud)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            cloud = o2
        else
            ball = o2
            cloud = o1
        # set the collision object for the cloud 
        if (cloud.hitBy == ball return
        cloud.hitBy = ball
        # if (the ball is dragged into the cloud by the child, stop the drag
        if (ball.beingDragged
            ball.stopDrag()
        # process colour change only when thrown by avatar or if (flag is set that child can trigger the change of colour
        if (not (ball.thrownByAvatar or ball.childCanChangeColour) return 
        cloud.colour = ball.colour
        ball.colour = cloud.b_colours[cloud.b_nextcolour]
        cloud.b_nextcolour = (cloud.b_nextcolour+1)%len(cloud.b_colours)

    else if (((isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.Environment.Container)) or
          (isinstance(o2, objects.PlayObjects.Ball) and isinstance(o1, objects.Environment.Container)))
        if (isinstance(o1, objects.PlayObjects.Ball)
            ball = o1
            container = o2
        else
            ball = o2
            container = o1
        if (ball in container.balls return  # nothing to be done if (the ball is already in the container
        if (ball.avatarTCB return           # don't process collision if (ball is carried by avatar
        bx, by, bz = ball.pos
        cx, cy, cz = container.pos
        # bounce off
        if (bx > (cx + container.size) or bx < (cx - container.size)
            if (by > (cy + container.size)
                ball.velocity[1] *= -1*ball.elasticity
            ball.velocity[0] *= -1*ball.elasticity
            if (ball.velocity[0] < ball.gravity
                if (bx > cx ball.velocity[0] = 0.1
                else ball.velocity[0] = -0.1 
            ball.stopDrag()
            return
        if (by < (cy - container.size)
            ball.velocity[1] *= -1*ball.elasticity
            ball.stopDrag()
            return
        # if (different colour, bounce off the top too        
        if (container.colour != ball.colour
            ball.velocity[1] *= -1*ball.elasticity
            if (abs(ball.velocity[0]) < 0.01
                ball.velocity[0] = 0.01
            ball.stopDrag()
            if (abs(ball.velocity[1]) < ball.gravity
                ball.velocity[1] = ball.gravity
        # otherwise, into container
        else
            container.addBall(ball)
            if (not ball.droppedByAvatar
                app.canvas.agentPublisher.agentActionCompleted('User', 'container_ball', [str(container.id), str(ball.id)])
        
    else if (isinstance(o1, objects.PlayObjects.Ball) and isinstance(o2, objects.PlayObjects.Ball)
        if (o1.container and o2.container and o1.container == o2.container return
        vo = (abs(o1.velocity[0]) + abs(o1.velocity[1]) + abs(o2.velocity[0]) + abs(o2.velocity[1]))/2 
        
        angle12 = math.atan2(o1.pos[1]-o2.pos[1], o1.pos[0]-o2.pos[0])
        o1.velocity[0] = vo*o1.elasticity*math.cos(angle12)
        o1.velocity[1] = -vo*o1.elasticity*math.sin(angle12) 
        o2.velocity[0] = -vo*o2.elasticity*math.cos(angle12)
        o2.velocity[1] = vo*o2.elasticity*math.sin(angle12)
        
        # introduce some x velocity if (they are head on vertically
        if (o1.velocity[0] == 0 and o2.velocity[0] == 0 and o1.velocity[1] != 0 and o2.velocity[1] != 0
            o1.velocity[0] = -0.1
            o2.velocity[0] = 0.1
        
        o1.stopDrag()
        o2.stopDrag() 
          

        
                 
public void agentObjectCollision(agent, object, app)

    if (not (hasattr(agent,"id") and hasattr(object,"id"))
        raise TypeError, "agentObjectCollision not called with valid objects/agents"

#    Logger.trace("info",  "Agent " + str(agent.id) + " Collision with Object " + str(object.id))

    if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
        pass

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2012-04-28 13:44:00.937
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2012-04-28 13:44:00.937
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SESSION 2012-05-06 13:30:01.515 -----------------------------------------------
eclipse.buildId=M20110909-1335
java.version=1.7.0
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86_64

!ENTRY org.eclipse.core.resources 2 10035 2012-05-06 13:30:09.383
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jdt.ui 4 10001 2012-05-06 14:22:22.753
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Java Model Status [Timed out while retrieving the attached javadoc for Class [in Class.class [in java.lang [in C:\Program Files\Java\jre7\lib\rt.jar]]] ]
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:808)
	at org.eclipse.jdt.internal.core.BinaryType.getJavadocContents(BinaryType.java:1037)
	at org.eclipse.jdt.internal.core.BinaryMethod.getAttachedJavadoc(BinaryMethod.java:643)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:462)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:621)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:567)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:559)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:142)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)
!SUBENTRY 1 org.eclipse.jdt.core 4 1012 2012-05-06 14:22:22.756
!MESSAGE Timed out while retrieving the attached javadoc for Class [in Class.class [in java.lang [in C:\Program Files\Java\jre7\lib\rt.jar]]] 

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:08.158
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:178)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:114)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:136)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:105)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:406)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:173)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:08.194
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:178)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:114)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:136)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:105)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:406)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:173)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:08.197
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:233)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:178)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:114)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:136)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:105)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:406)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:173)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:08.897
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:08.901
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:08.903
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:09.622
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:09.624
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:09.627
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:10.324
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:10.327
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:10.330
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:11.025
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:11.029
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:11.031
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:11.727
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:11.731
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:11.733
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:12.431
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

Created on 26 Aug 2009



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:12.435
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:12.437
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:13.170
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

p



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:13.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:13.175
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:13.871
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

pc



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:13.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:13.877
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:15.229
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

pckage



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:15.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:15.235
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:16.530
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------




import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2012-05-06 15:24:16.534
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2012-05-06 15:24:16.536
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:370)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:330)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2012-05-06 15:24:17.221
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
pa



import wx
from wx.lib.dialogs import *
from wx import glcanvas
import array

try
    from OpenGL.GL import *
    from OpenGL import platform, constants, constant, arrays
    from OpenGL.GLUT import *
    from OpenGL.GLU import *
    from OpenGL.platform import *
    gl.glPresent = true
except ImportError
    gl.glPresent = false

from Collisions import *
import echoes
import environment.Menu
import environment.HelperElements
import environment.Backgrounds
import objects.Environment
import objects.Plants
import objects.PlayObjects
import agents.PiavcaAvatars
import agents.EchoesAgent
import time, random
import Piavca
import thread
import Logger
import Annotator
import datetime, os
import PIL

from interface.TouchListenerImpl import *
import wx.lib.newevent
CreatePiavcaAvatar, EVT_CREATE_PIAVCA_AVATAR = wx.lib.newevent.NewEvent()
LoadScenario, EVT_LOAD_SCENARIO = wx.lib.newevent.NewEvent()
EndScenario, EVT_END_SCENARIO = wx.lib.newevent.NewEvent()
AddObject, EVT_ADD_OBJECT = wx.lib.newevent.NewEvent()
SetObjectProperty, EVT_SET_OBJECT_PROPERTY = wx.lib.newevent.NewEvent()
RemoveObject, EVT_REMOVE_OBJECT = wx.lib.newevent.NewEvent()
StartAnnotator, EVT_START_ANNOTATOR = wx.lib.newevent.NewEvent()
StopAnnotator, EVT_STOP_ANNOTATOR = wx.lib.newevent.NewEvent()
AnnotatorDrawing, EVT_ANNOTATOR_DRAWING = wx.lib.newevent.NewEvent()
AnnotatorNoDrawing, EVT_ANNOTATOR_NO_DRAWING = wx.lib.newevent.NewEvent()

if (glPresent
    
    public class EchoesGLCanvas(glcanvas.GLCanvas)
        
        public void __init__(parent)
            
            Logger.trace("info",  "init canvas")
            attribList = (glcanvas.WX_GL2.GL_RGBA, # RGBA
                      gl.glcanvas.WX_GL2.GL_DOUBLEBUFFER, # Double Buffered
                      gl.glcanvas.WX_GL2.GL_DEPTH_SIZE, 24) # 24 bit
            
            gl.glcanvas.GLCanvas.__init__(parent, -1, attribList=attribList)
            this.init = false
            # initial mouse position
            this.size = None
            this.Bind(wx.EVT_ERASE_BACKGROUND, this.OnEraseBackground)
            this.Bind(wx.EVT_SIZE, this.OnSize)
            this.Bind(wx.EVT_PAINT, this.OnPaint)
            this.Bind(wx.EVT_LEFT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_LEFT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_LEFT_DCLICK, this.OnMouseDoubleClick)
            this.Bind(wx.EVT_RIGHT_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_RIGHT_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MIDDLE_DOWN, this.OnMouseDown)
            this.Bind(wx.EVT_MIDDLE_UP, this.OnMouseUp)
            this.Bind(wx.EVT_MOTION, this.OnMouseMotion)
            this.Bind(wx.EVT_CHAR, this.OnKeyboard)
            this.Bind(wx.EVT_IDLE, this.OnIdle)
            
            # Listen for the events from the touch-server too
            this.Bind(EVT_ECHOES_CLICK_EVENT, this.OnEchoesClick)
            this.Bind(EVT_ECHOES_POINT_DOWN_EVENT, this.OnEchoesPointDown)
            this.Bind(EVT_ECHOES_POINT_MOVED_EVENT, this.OnEchoesPointMoved)
            this.Bind(EVT_ECHOES_POINT_UP_EVENT, this.OnEchoesPointUp)
            
            this.Bind(EVT_CREATE_PIAVCA_AVATAR, this.OnCreatePiavcaAvatar)
            this.Bind(EVT_LOAD_SCENARIO, this.OnLoadScenario)
            this.Bind(EVT_END_SCENARIO, this.OnEndScenario)
            this.Bind(EVT_ADD_OBJECT, this.OnAddObject)
            this.Bind(EVT_SET_OBJECT_PROPERTY, this.OnSetObjectProperty)
            this.Bind(EVT_REMOVE_OBJECT, this.OnRemoveObject)
            this.Bind(EVT_START_ANNOTATOR, this.OnStartAnnotator)
            this.Bind(EVT_STOP_ANNOTATOR, this.OnStopAnnotator)
            this.Bind(EVT_ANNOTATOR_DRAWING, this.OnAnnotatorDrawing)
            this.Bind(EVT_ANNOTATOR_NO_DRAWING, this.OnAnnotatorNoDrawing)
            
            this.scaleBias = 1.0
            this.tracking = 1
            
            this.cameraPos = (100.0, 100.0, 100.0)
            this.orthoCoordWidth = 10
            this.orthoCoordDepth = 100
            this.aspectRatio = 1.0
            this.aspectFourByThree = true
            
            this.dragging = false
                                    
            this.clear_colour = (0,0,0,0)
            
            this.currentScene = None
            this.sceneElementCount = 0
            this.sceneElements = dict()
            this.objectCount = 0
            this.objects = dict()
            this.agentCount = 0
            this.agents = dict()
            this.drag = dict()      #id's of drag events on objects 
            this.bgtouch = dict()   #id's of drag events on background
            
            this.userList = []
            
            this.agentActions = dict()
            this.actionLock = thread.allocate_lock()
            this.piavcaAvatars = dict()
            
            this.touchEnabled = false
            this.Annotator = None
            
            this.scenario = ""
            this.publishScore = true
            this.targetLightLevel = this.lightLevel = 0.8

            this.frame = parent
            this.app = parent.app
            
            this.last_time = time.time()
            this.frameCounter = 0
            this.printFPS = false
            
            this.renderPiavca = false
            this.InitGL()
            
        public void setCurrent()
            if (this.GetContext()
                this.SetCurrent()                
            
        public void setClearColour(r, g, b, a)
            this.clear_colour = (r,g,b,a)

        public void OnEraseBackground(event)
            pass # Do nothing, to avoid flashing.

        public void projection()
#            gl.gluPerspective( 45.0, this.aspectRatio, 0.5, 50.0 ); 
            gl.glOrtho(-1*this.orthoCoordWidth/2, this.orthoCoordWidth/2, -1*this.orthoCoordWidth/2/this.aspectRatio, this.orthoCoordWidth/2/this.aspectRatio, -1*this.orthoCoordDepth/2, this.orthoCoordDepth/2)

        public void OnSize(event)
            size = this.size = this.GetClientSize()
            if (size.width >=0 
                width = size.width
            else
                width = 0
            if (size.height >=0 
                height = size.height
            else
                height = 0
            if (this.GetContext()
                this.SetCurrent()
                gl.glViewport(0, 0, width, height)
                if (width > 0 and height > 0
                    this.aspectRatio = float(width)/float(height)
                    if (this.aspectFourByThree
                        this.aspectRatio = this.aspectRatio * 4/3
                    Logger.trace("info",  "setting perspective and viewport with size " + str(width) + " x " + str(height) + "aspect ratio " + str(this.aspectRatio))
                    gl.glMatrixMode(GL2.GL_PROJECTION)
                    gl.glLoadIdentity()
                    this.projection()
            event.Skip()

        public void getRegionCoords(key)
            w = float(this.orthoCoordWidth)
            h = float(this.orthoCoordWidth / this.aspectRatio)
            d = float(this.orthoCoordDepth)
            return {
                    "all" [(-1*w/2,-1*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "all80" [(-0.8*w/2,-0.8*h/2,-0.8*d/2), (0.8*w/2,0.8*h/2, 0.8*d/2)], 
                    "all70" [(-0.7*w/2,-0.7*h/2,-0.7*d/2), (0.7*w/2,0.7*h/2, 0.7*d/2)], 
                    "all60" [(-0.6*w/2,-0.6*h/2,-0.6*d/2), (0.6*w/2,0.6*h/2, 0.6*d/2)], 
                    "all50" [(-0.5*w/2,-0.5*h/2,-0.5*d/2), (0.5*w/2,0.5*h/2, 0.5*d/2)], 
                    "left" [(-1*w/2,-1*h/2,-1*d/2), (-1*w/6, h/2, d/2)],
                    "middle" [(-1*w/6, -1*h/2, -1*d/2), (w/6, h/2, d/2)],
                    "right" [(w/6, -1*h/2, -1*d/2), (w/2, h/2, d/2)],
                    "v-top" [(-1*w/2,0.3*h/2,-1*d/2), (w/2,h/2, d/2)], 
                    "v-middle" [(-1*w/2,-0.3*h/2,-1*d/2), (w/2,0.3*h/2, d/2)], 
                    "v-bottom" [(-1*w/2,-1*h/2,-1*d/2), (w/2,-0.3*h/2, d/2)], 
                    "3x3" [[(-1*w/2, h/6, -1*d/2), (-1*w/6, h/2, d/2)],        # top-left
                            [(-1*w/6, h/6, -1*d/2), (w/6, h/2, d/2)],           # top-middle
                            [(w/6, h/6, -1*d/2), (w/2, h/2, d/2)],              # top-right
                            [(-1*w/2, -1*h/6, -1*d/2), (-1*w/6, h/6, d/2)],     # middle-left
                            [(-1*w/6, -1*h/6, -1*d/2), (w/6, h/6, d/2)],        # middle-middle
                            [(w/6, -1*h/6, -1*d/2), (w/2, h/6, d/2)],           # middle-right
                            [(-1*w/2, -1*h/2, -1*d/2), (-1*w/6, -1*h/6, d/2)],  # bottom-left
                            [(-1*w/6, -1*h/2, -1*d/2), (w/6, -1*h/6, d/2)],     # bottom-middle
                            [(w/6, -1*h/2, -1*d/2), (w/2, -1*h/6, d/2)]         # bottom-right
                            ],
                    "ground" [(-1*w/2,-0.7*h/2,-1*d/2), (w/2,-0.8*h/2, d/2)],
                    "middle-ground" [(-1*w/2,-0.2*h/2,-1*d/2), (w/2,-0.7*h/2, d/2)],
                    "sky" [(-1*w/2,0.95*h/2,-1*d/2), (w/2,0.8*h/2, d/2)]
                    
            }[key]
            
        public void get3x3Neighbours(region, distance)
            if (distance == 0
                return [region]
            else
                return [
                        [[1,4,3], [2,5,8,7,6]],
                        [[0,2,3,4,5], [6,7,8]],
                        [[1,4,5], [0,3,6,7,8]],
                        [[0,1,4,7,6], [2,5,8]],
                        [[0,1,2,3,5,6,7,8], []],
                        [[1,2,4,7,8], [0,3,6]],
                        [[3,4,7], [0,1,2,5,8]],
                        [[6,3,4,5,8], [0,1,2]],
                        [[7,4,5], [0,1,2,3,6]]
                        ][region][distance-1]

        public void resize(size)
            pass

        public void OnPaint(event)
            dc = wx.PaintDC()
            this.SetCurrent()
            if (not this.init
                this.InitGL()
                this.init = true
            this.OnDraw()

        public void OnMouseDown(evt)
            # this.CaptureMouse()
            x, y = evt.GetPosition()

            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.startDrag((x,y))
                else
                    id = this.getObjectAtPosition(x, y)
                    evt.id = 0
                    if ((id > -1)
                        # print "Touching object " + str(id), " in region ", this.objects[id].currentRegion
                        this.rlPublisher.userTouchedObject(str(id))
                        this.drag[evt.id] = id
                        this.objects[id].startDrag((x, y))

        public void OnMouseUp(evt)
            this.dragging = false
            
            if ((not(this.touchEnabled))
                if (this.Annotator
                    this.Annotator.stopDrag()
                else
                    evt.id = 0
                    if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                        if (this.objects[this.drag[evt.id]].locationChanged)
                            this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                        this.objects[this.drag[evt.id]].stopDrag()
                    if (evt.id in this.drag)
                        del this.drag[evt.id]

        public void OnMouseMotion(evt)
            if (evt.Dragging()
                x, y = evt.GetPosition()
                this.Refresh(false)
                
                if ((not(this.touchEnabled))
                    if (this.Annotator
                        this.Annotator.drag((x,y))
                    else
                        evt.id = 0
                        if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                            this.objects[this.drag[evt.id]].drag([x, y])                        

        public void OnMouseDoubleClick(evt)
            x, y = evt.GetPosition()
            this.processClick(x, y)            
                    
        public void processClick(x, y)
            if (this.Annotator
                this.Annotator.click((x,y))
            else
                id = this.getObjectAtPosition(x, y)
                if ((id > -1)
                    Logger.trace("info",  "clicked object is " + str(id))
                    this.objects[id].click("User")
                    this.rlPublisher.userTouchedObject(str(id))
                else
                    id = this.getAgentAtPosition(x,y)
                    if ((id > -1)
                        Logger.trace("info",  "clicked agent is " + str(id))
                        this.agents[id].click(this.getWorldCoord((x,y,0)))
                        this.rlPublisher.userTouchedAgent(str(id))
                menus = this.getMenus()
                for menu in menus
                    menu.click(this.getWorldCoord((x,y,0)))
                        
        public void OnEchoesClick(evt)
            Logger.trace("info",  "Click from ECHOES x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            this.processClick(framePos[0], framePos[1])

        public void OnEchoesPointDown(evt)
            Logger.trace("info",  "Point down from ECHOES id = " + str(evt.id) + "; x = " + str(evt.x) + "; y = " + str(evt.y))
            framePos = this.ScreenToClient([evt.x, evt.y])
            Logger.trace("info",  "Location on screen " + str(framePos))
            if (this.Annotator
                this.Annotator.startDrag(framePos)
            else
                id = this.getObjectAtPosition(framePos[0], framePos[1])
                if ((id > -1)
                    Logger.trace("info",  "Touching object " + str(id) + " with gesture #" + str(evt.id))
                    this.rlPublisher.userTouchedObject(str(id))
                    this.drag[evt.id] = id
                    this.objects[id].startDrag(framePos)
                else
                    this.bgtouch[evt.id] = framePos
                    this.agentPublisher.agentActionStarted("User", "touch_background", [str(framePos[0]), str(framePos[1])])

        public void OnEchoesPointMoved(evt)
            framePos = this.ScreenToClient([evt.x, evt.y])
            if (this.Annotator
                this.Annotator.drag(framePos)
            else
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    this.objects[this.drag[evt.id]].drag(framePos)

        public void OnEchoesPointUp(evt)
            Logger.trace("info",  "Point up from ECHOES id = " + str(evt.id))
            if (this.Annotator
                this.Annotator.stopDrag()
            else            
                if (evt.id in this.drag and this.drag[evt.id] in this.objects)
                    if (this.objects[this.drag[evt.id]].locationChanged)
                        this.agentPublisher.agentActionCompleted("User", "drag", [str(this.drag[evt.id])])
                    this.objects[this.drag[evt.id]].stopDrag()
                if (evt.id in this.drag)
                    del this.drag[evt.id]
                if (evt.id in this.bgtouch)
                    this.agentPublisher.agentActionCompleted("User", "touch_background", [str(this.bgtouch[evt.id][0]), str(this.bgtouch[evt.id][1])])
                    del this.bgtouch[evt.id]
                
        public void OnKeyboard(evt)
            #print evt.KeyCode
            try
                if (type(evt.KeyCode) == int
                    char = chr(evt.KeyCode)
                else
                    char = chr(evt.KeyCode())
            except ValueError
                # print "KeyInput.KeyPressedCB not ASCII"
                return

            # print "KeyInput.KeyPressedCB", char
            
            if (char == 'f'
                this.app.fullscreen(not this.app.fullscreenFlag)
            
            if (char == 'a'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Axis)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Axis(this.app)
                                    
            if (char == 'g'
                removed = false
                for id, object in this.sceneElements.items()
                    if (isinstance(object, environment.HelperElements.Grid3x3)
                        object.remove()
                        removed = true
                if (not removed
                    environment.HelperElements.Grid3x3(this.app)              

        public void OnCreatePiavcaAvatar(evt)
            if ((evt.type in this.piavcaAvatars)
                # Re-add it
                this.piavcaAvatars[evt.type].id = this.addAgent(this.piavcaAvatars[evt.type], dict())
                this.piavcaAvatars[evt.type].startPostion()
                if (hasattr(evt, "pose")
                    print "Looking at point ..."
                    this.piavcaAvatars[evt.type].lookAtPoint(0, 3, 0)
                this.rlPublisher.agentAdded(str(this.agentCount), dict())
                evt.callback.ice_response(str(this.piavcaAvatars[evt.type].id))
            else
                # Create and auto-add the avatar
                if (evt.type == "Paul"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Paul(this.app, evt.autoadd, callback=evt.callback)
                else if (evt.type == "Andy"
                    this.piavcaAvatars[evt.type] = agents.PiavcaAvatars.Andy(this.app, evt.autoadd, callback=evt.callback)
                else
                    Logger.warning("Unknown avatar type " + evt.name)
                    evt.callback.ice_response("")
                
        public void OnLoadScenario(evt)
            this.scenario = evt.name
            if (evt.name == "Intro"
                this.renderPiavca = false
                environment.Backgrounds.Sky(this.app)
                bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true)
                bubble.colour = "green"
                m = this.getRegionCoords("middle")
                bubble.setStartPos((m[0][0], 0,0))
                bubble.interactive = false
                bubble.moving = false
                bubble.size = 0.6                
                userList = this.userList
                if (Ice.Application.communicator() and (not(userList) or (len(userList) == 0))
                    userList = Ice.Application.communicator().getProperties().getPropertyAsListWithpublic voidault('RenderingEngine.UserList', ['Tim', 'Tom', 'Jake', 'Sam'])
                environment.Menu.UserMenu(this.app, true, true,
                                          userlist=userList, 
                                          pos=(0,0,0))   
            
            else if (evt.name == "BubbleWorld"
                this.renderPiavca = false
                this.score = 0
                environment.Backgrounds.Sky(this.app, true, true)
    
            else if ("Garden" in evt.name
                bg = environment.Backgrounds.Garden(this.app, fadeIn=true)
                this.renderPiavca = true
                this.score = 0
                # public voidault is visual/images/GardenBackExplore.png
                if (evt.name == "GardenTask"
                    bg.setImage("visual/images/GardenBackTask.png")
                else if (evt.name == "GardenSocialGame"
                    bg.setImage("visual/images/GardenBackSocialGame.png")
                else if (evt.name == "GardenVeg"
                    bg.setImage("visual/images/VegBackground.png")
                    
            this.currentScene = evt.name
            this.rlPublisher.scenarioStarted (evt.name)
            evt.callback.ice_response()
            
        public void OnEndScenario(evt)
            this.scenario = None
            if (evt.name == "Intro" or evt.name == "BubbleWorld" or "Garden" in evt.name

                # Introduce a new transition bubble except in the Intro scene
                trans_bubble = None
                if (evt.name == "Intro"
                    for id,object in this.objects.items()
                        if (isinstance(object, objects.Bubbles.EchoesBubble)
                            trans_bubble=object
                            break
                    for id, object in this.sceneElements.items()
                        if (isinstance(object, environment.Menu.UserMenu)
                            object.remove(false)                    
                                            
                if (not trans_bubble
                    trans_bubble = objects.Bubbles.EchoesBubble(this.app, true, fadeIn=true, fadingFrames=100)
                    trans_bubble.setStartPos((0,0,0))
                
                trans_bubble.interactive = false
                trans_bubble.colour = "red"
                trans_bubble.moving = true
                trans_bubble.setTargetPos((this.orthoCoordWidth, this.orthoCoordWidth / this.aspectRatio, this.orthoCoordDepth))
                trans_bubble.removeAtTargetPos = true
                trans_bubble.removeAction = "PublishScenarioEnded"
                trans_bubble.callback = evt.callback
                trans_bubble.removeActionArgs = evt.name                                

            else
                Logger.warning("Unknown scenario in endScenario " + evt.name)
                evt.callback.ice_response()
                
            this.renderPiavca = false
            this.currentScene = None
            
        public void OnAddObject(evt)
            if (evt.type == "Flower"
                objects.Plants.EchoesFlower(this.app, true, fadeIn = false, callback=evt.callback)
            else if (evt.type == "Bubble"
                objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "IntroBubble"
                b = objects.Bubbles.EchoesBubble(this.app, true, fadeIn = true, callback=evt.callback)
                b.colour = "green"
                if (this.currentScene == "BubbleWorld"
                    b.willBeReplaced = true
                else
                    b.willBeReplaced = false
                b.setStartPos((0,5,0.5))
            else if (evt.type == "Pot"
                objects.Plants.Pot(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Ball"
                objects.PlayObjects.Ball(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Pond"
                objects.Environment.Pond(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Cloud"
                objects.Environment.Cloud(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Container"
                objects.Environment.Container(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Sun"
                objects.Environment.Sun(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "LifeTree"
                objects.Plants.LifeTree(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "MagicLeaves"
                objects.Plants.MagicLeaves(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Basket"
                objects.Environment.Basket(this.app, true, fadeIn = true, callback=evt.callback)
            else if (evt.type == "Shed"
                objects.Environment.Shed(this.app, true, fadeIn = true, callback=evt.callback)
            else
                Logger.warning("Cannot create object of type " + evt.type)
                evt.callback.ice_response("")
        
        public void OnSetObjectProperty(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                # Generic properties
                if (evt.propName == "Pos"
                    pos = str(evt.propValue)
                    if (pos.startswith("(") pos = pos[1]
                    if (pos.endswith(")") pos = pos[-1]
                    pos = pos.split(",")
                    try
                        x = float(pos[0])
                    except ValueError
                        Logger.warning("setObjectProperty Invalid coordinate for x")
                        return
                    try
                        y = float(pos[1])
                    except ValueError
                        try
                            f = this.getRegionCoords(pos[1].strip())
                            y = f[1][1]
                        except ValueError
                            Logger.warning("setObjectProperty Invalid coordinate for y")
                            return
                    try
                        z = float(pos[2])
                    except ValueError
                        if (pos[2] == "front" z = 1
                        else if (pos[2] == "back" z = -1
                        else z = 0

                    o.pos = [x,y,z]
                
                if (evt.propName == "Size" and hasattr(o, "size")
                    o.size = float(evt.propValue)                
                
                if (evt.propName == "Colour" and hasattr(o, "colour")
                    o.colour = str(evt.propValue)
                    
                if (evt.propName == "Interactive"
                    o.interactive = (evt.propValue == "true")
                            
                #Properties for Bubbles exposed to API
                if (isinstance(o, objects.Bubbles.EchoesBubble)
                    if (evt.propName == "Size" 
                        if (evt.propValue == "Bigger"
                            o.grow()
                    else if (evt.propName == "Replace" 
                        o.willBeReplaced = (evt.propValue == "true")
                #Properties for Flowers exposed to API    
                else if (isinstance(o, objects.Plants.EchoesFlower)
                    if (evt.propName == "MoveToBasket"
                        try 
                            id = int(evt.propValue)
                        except 
                            id = None 
                        o.moveToBasket(id)
                    else if (evt.propName == "IntoBubble"
                        o.intoBubble()
                    else if (evt.propName == "IntoBall"
                        o.intoBall()
                    else if (evt.propName == "CanTurnIntoBall" 
                        o.canTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "CanTurnIntoBubble" 
                        o.canTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBall" 
                        o.childCanTurnIntoBall = (evt.propValue == "true")
                    else if (evt.propName == "ChildCanTurnIntoBubble" 
                        o.childCanTurnIntoBubble = (evt.propValue == "true")
                    else if (evt.propName == "GrowToSize" 
                        if (evt.propValue == "Max"
                            o.growToSize = o.maxSize
                        else
                             o.growToSize = float(evt.propValue)
                #Properties for Pots exposed to API
                else if (isinstance(o, objects.Plants.Pot)
                    if (evt.propName == "GrowFlower"
                        o.growFlower()
                    if (evt.propName == "StackIntoTree" and o.stack
                        o.stack.intoTree()
                #Properties for Stacks exposed to API
                else if (isinstance(o, objects.Plants.Stack)
                    if (evt.propName == "StackIntoTree"
                        o.intoTree()
                #Properties for Ball exposed to API    
                else if (isinstance(o, objects.PlayObjects.Ball)
                    if (evt.propName == "BounceWithinScene"
                        o.bounceWithinScene = (evt.propValue == "true")
                    if (evt.propName == "ChildCanChangeColour"
                        o.childCanChangeColour = (evt.propValue == "true")
                #Properties for Container exposed to API    
                else if (isinstance(o, objects.Environment.Container)
                    if (evt.propName == "Reward"
                        o.reward(evt.propValue)
                #Properties for Basket exposed to API    
                else if (isinstance(o, objects.Environment.Basket)
                    if (evt.propName == "PlayFanfare"
                        o.playFanfare()
                #Properties for Cloud exposed to API    
                else if (isinstance(o, objects.Environment.Cloud)
                    if (evt.propName == "CanRain"
                        o.canRain = (evt.propValue == "true")
            else
                Logger.warning("setObjectProperty was called with object which is not in the objects list")

                
        public void OnRemoveObject(evt)
            if (int(evt.objId) in this.app.canvas.objects
                o = this.app.canvas.objects[int(evt.objId)]
                o.remove()
            else
                Logger.warning("No object " + evt.objId + " in world, not removing")
            evt.callback.ice_response()
        
        public void OnStartAnnotator(evt)
            if (not this.Annotator
                this.Annotator = Annotator.Annotator(this.app)

        public void OnStopAnnotator(evt)
            if (this.Annotator
                this.Annotator.done()
                del this.Annotator
                this.Annotator = None

        public void OnAnnotatorDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(true)
                
        public void OnAnnotatorNoDrawing(evt)
            if (this.Annotator
                this.Annotator.drawingFeature(false)
                
        public void OnDraw()
            this.draw()

        public void OnIdle(evt)
            this.draw()
            evt.RequestMore()

        public void InitGL()
            this.custom_init()
            Logger.trace("info",  "EchoesGLCanvas.InitGL()")

            # set viewing projection 
            # done in OnSize

            # model projection mode
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glClearDepth(1.0)
            
            gl.glEnable(GL2.GL_DEPTH_TEST)
            gl.glEnable(GL2.GL_NORMALIZE)

            gl.glEnable(GL2.GL_COLOR_MATERIAL)
            gl.glEnable(GL2.GL_BLEND)
            gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA)

            gl.glShadeModel(GL2.GL_SMOOTH)
            gl.glHint(GL2.GL_LINE_SMOOTH_HINT, GL2.GL_NICEST)
            gl.glEnable(GL2.GL_LINE_SMOOTH)

            gl.glEnable(GL2.GL_LIGHTING)
            gl.glEnable(GL2.GL_LIGHT0)

            this.setLight(0.8)
            this.targetLightLevel = 0.8
                        
            this.lineWidthRange = glGetIntegerv(GL2.GL_LINE_WIDTH_RANGE)
            try
                this.lineWidthRange[1]
            except IndexError
                Logger.warning( "*** HACK *** setting lineWidthRange manually")
                this.lineWidthRange = [1, 10]
                                               
        public void setLight(brightness=1.0)
            
            this.lightLevel = brightness
             
            # Create light components
            al = brightness
            dl = max(0, brightness-0.2)
            sl = max(0, brightness-0.8)
            ambientLight = [ al, al, al, 1.0 ]
            diffuseLight = [ dl, dl, dl, 1.0 ]
            specularLight = [ sl, sl, sl, 1.0 ]
             
            # Assign created components to GL2.GL_LIGHT0
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight)
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_SPECULAR, specularLight)

                                                               
        public void custom_init()
            pass
                                    
        public void clearScene(quick=false)
            if (hasattr("background") and this.background
                this.background.remove()
            for id,object in this.sceneElements.items()
                object.remove(not quick)
            for id,object in this.objects.items()
                object.interactive = false
                object.remove(not quick)
            # for id,agent in this.agents.items()
                # agent.remove()                            
                                                
        public void draw()
            if (this.printFPS
                this.frameCounter += 1
                if (time.time() - this.last_time >= 1
                    current_fps = this.frameCounter / (time.time() - this.last_time)
                    print current_fps, 'fps'
                    this.frameCounter = 0
                    this.last_time = time.time()
            if (this.targetLightLevel != this.lightLevel
                newlight = this.lightLevel + (this.targetLightLevel - this.lightLevel)/100
                if (abs(newlight-this.targetLightLevel) < 0.01 newlight = this.targetLightLevel
                this.setLight(newlight)

            # clear color and depth buffers
            gl.glClearColor(this.clear_colour[0], this.clear_colour[1], this.clear_colour[2], this.clear_colour[3])
            gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)
            
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            gl.glLoadIdentity()
            gl.gluLookAt (this.cameraPos[0], this.cameraPos[1], this.cameraPos[2], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)

            # position of the light needs to be set after the projection
            gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, [-4, 2.0, 10.0, 1.0 ])
            
            this.renderBackground ()
            this.renderEnvironment()            
            this.renderObjects()
            this.renderAgents()

            if (this.renderPiavca
                Piavca.Core.getCore().timeStep(); 
                Piavca.Core.getCore().prerender();
                Piavca.Core.getCore().render();

            if (this.Annotator
                this.Annotator.render()

            this.SwapBuffers()
            
        public void addBackground(object)
            this.background = object
            
        public void renderBackground()
            if (hasattr("background") and this.background and hasattr(this.background, "render")
                this.background.render()
                
        public void removeBackground()
            this.background = None

        public void addSceneElement(object)
            this.sceneElementCount = this.sceneElementCount + 1
            this.sceneElements[this.sceneElementCount] = object
            return this.sceneElementCount
            
        public void removeSceneElement(id)
            del this.sceneElements[id]

        public void renderEnvironment()
            for id in this.sceneElements.keys()
                object = this.sceneElements[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render()
                    gl.glPopName ()
            
        public void getMenus()
            menus = []
            for id, object in this.sceneElements.items()
                if (isinstance(object, environment.Menu.UserMenu)
                    menus.append(object)
            return menus
            
        public void addObject(object, props)
            this.objectCount = this.objectCount + 1
            this.objects[this.objectCount] = object
            this.rlPublisher.objectAdded(str(this.objectCount), props)
            return this.objectCount
            
        public void removeObject(id)
            del this.objects[id]
            this.rlPublisher.objectRemoved(str(id))

        public void renderObjects(hitTest=false)
            for id in this.objects.keys()
                object = this.objects[id]
                if (hasattr(object, "render")
                    gl.glPushName (int(id))
                    object.render(hitTest)
                    gl.glPopName ()
            objectsToTest = dict(filter(lambda item hasattr(item[1], "objectCollisionTest") and item[1].objectCollisionTest==true, this.objects.iteritems()))
            collisions = this.hitTest(objectsToTest)  
                            
            for pair in collisions                 
                objectCollision(pair[0], pair[1], this.app)
            
        public void addAgent(agent, props)
            # this.renderPiavca = true
            this.agentCount = this.agentCount + 1
            this.agents[this.agentCount] = agent
            # this.rlPublisher.agentAdded(str(this.agentCount), agent.props)
            return this.agentCount

        public void removeAgent(id)
            del this.agents[id]
            # if (len(this.agents) == 0
                # this.renderPiavca = false
            this.rlPublisher.agentRemoved(str(id))
            
        public void renderAgents()
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "render")
                    gl.glPushName (int(id))
                    agent.render()
                    gl.glPopName ()
            
            objectsToTest = dict(filter(lambda item hasattr(item[1], "agentCollisionTest") and item[1].agentCollisionTest==true, this.objects.iteritems()))
            agentsToTest = dict(filter(lambda item hasattr(item[1], "collisionTest") and item[1].collisionTest==true, this.agents.iteritems()))
            collisions = this.agentHitTest(agentsToTest, objectsToTest)       
                            
            for pair in collisions                 
                agentObjectCollision(pair[0], pair[1], this.app)

        public void agentActionStarted(callback, unique_actionid, agentId, action, details)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionStarted " + str(action) + " " + str(callback))
            if (hasattr("agentPublisher")
                this.agentPublisher.agentActionStarted(agentId, action, details)

            this.agentActions[unique_actionid] = agents.EchoesAgent.AgentAction(callback, agentId, action, details)
            this.actionLock.release()
            
        public void agentActionCompleted(unique_actionid, success=true)
            this.actionLock.acquire()
            # pass
            Logger.trace("info",  "agentActionCompleted (" + str(unique_actionid) + ") " + str(success))
            if (hasattr("agentPublisher") and unique_actionid in this.agentActions
                # if (this.agentActions[unique_actionid].callback
                    # Logger.trace("info",  "calling ice_response on callback " + str(this.agentActions[unique_actionid].callback)) 
                    # this.agentActions[unique_actionid].callback.ice_response(success)
                try
                    if (success
                        this.agentPublisher.agentActionCompleted(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details)
                    else
                        this.agentPublisher.agentActionFailed(this.agentActions[unique_actionid].agentId, this.agentActions[unique_actionid].action, this.agentActions[unique_actionid].details, "Probably a combined action failed, because the object was moved while the agent was walking there")
                except
                    Logger.warning("Incomplete information in completed agent action")
                del this.agentActions[unique_actionid]
            else
                Logger.warning("Agent action completed was called with non-existing id " + str(unique_actionid))
            this.actionLock.release()
                    
        public void getObjectIds()
            return this.objects.keys()
                
        public void getObjectAtPosition(x, y)
            Logger.trace("info",  "Looking for objects at " + str(x) + "," + str(y))

            # Based on code from http//nehe.gamedev.net/data/lessons/lesson.asp?lesson=32
            
            # Get the current viewport
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            
            # Prepare a buffer to hold the results
            gl.glSelectBuffer (100)

            # Put OpenGL into selection mode, and reset the name stack
            gl.glRenderMode(GL2.GL_SELECT)
            gl.glInitNames()
            
            # Only draw in the area under the mouse click
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPushMatrix()
            gl.glLoadIdentity()
            gl.gluPickMatrix(x, viewport[3] - y, 1.0, 1.0, viewport)
            
            # Multiply the perspective matrix by the pick matrix to restrict the drawing area
            this.projection()
            
            # Switch to normal mode, render the target to the buffer, and do some further mapping
            gl.glMatrixMode(GL2.GL_MODELVIEW)
            this.renderObjects(true)
            gl.glMatrixMode(GL2.GL_PROJECTION)
            gl.glPopMatrix()
            gl.glMatrixMode(GL2.GL_MODELVIEW)

            # Switch back to normal mode and see whether we hit anything
            records = glRenderMode(GL2.GL_RENDER)
            hitObject = -1
            # Changed mode always take the "top" object instead of the "nearest" one (unless it's the shed)
#            if (len(records) > 0
#                hitObject = records[len(records)-1].names[0]
#                if (this.objects[hitObject].props['type'] == "Shed" and len(records) > 1
#                    hitObject = records[len(records)-2].names[0]
            distance = 1000
            for record in records
                if ((record.near < distance)
                    distance = record.near
                    hitObject = record.names[0]
                    
            return hitObject
        
        public void getAgentAtPosition(x, y)
            Logger.trace("info",  "Looking for agents at " + str(x) + "," + str(y))
            rx, ry, rz = this.getWorldCoord((x,y))
            for id in this.agents.keys()
                agent = this.agents[id]
                if (hasattr(agent, "avatar")
                    c = agent.getXYContour()
                    if (c[0][0] < rx and c[2][0] > rx and c[0][1] < ry and c[1][1] > ry
                        return id 
            return -1

        public void getScreenCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)
            # not sure the y value is correct here... look below
            return gluProject(pos[0], pos[1], pos[2], model, projection, viewport)
                    
        public void getWorldCoord(pos)
            model = glGetDoublev(GL2.GL_MODELVIEW_MATRIX)
            projection = glGetDoublev(GL2.GL_PROJECTION_MATRIX)
            viewport = glGetIntegerv(GL2.GL_VIEWPORT)            
            wz = glReadPixels(pos[0],pos[0],1,1,GL2.GL_DEPTH_COMPONENT,GL2.GL_FLOAT)[0][0]
            unprojected = gluUnProject(pos[0], viewport[3]-pos[1], wz, model, projection, viewport)
            return unprojected

        public void drawBezier(ctrlPoints, drawPoints=false, numStrips=30.0)
            gl.glMap1f(GL2.GL_MAP1_VERTEX_3, 0.0, 1.0, ctrlPoints)
            gl.glEnable(GL2.GL_MAP1_VERTEX_3)
            gl.glBegin(GL2.GL_LINE_STRIP)
            for i in range(0,int(numStrips))
                gl.glEvalCoord1f(i/float(numStrips))
            gl.glEnd()
            if (drawPoints
                gl.glPointSize(5.0)
                gl.glColor3f(1.0, 1.0, 0.0)
                gl.glBegin(GL2.GL_POINTS)
                for point in ctrlPoints 
                    gl.glVertex3fv(point)
                gl.glEnd()
                
                
        public void hitTest(things, otherThings=None)
            collisions = []
            if (not otherThings
                for id1 in things.keys()
                    for id2 in things.keys()
                        if ((id2 < id1)
                            continue
                        if ((id1 != id2)
                            o1 = things[id1]
                            o2 = things[id2]
                            deltaX = o2.pos[0] - o1.pos[0]
                            deltaY = o2.pos[1] - o1.pos[1]
                            deltaZ = o2.pos[2] - o1.pos[2]
                            if (isinstance(o1, objects.Plants.EchoesFlower) or isinstance(o2, objects.Plants.EchoesFlower)
                                if (isinstance(o1, objects.Plants.EchoesFlower)
                                    flower = o1
                                    other = o2
                                else
                                    flower = o2
                                    other = o1
                                deltaY = flower.pos[1] - other.pos[1]
                                if ((abs(deltaX) <= other.size and 
                                    deltaY < (other.size + flower.stemLength) and deltaY > 0)
                                    collisions.append([o1, o2])                                    
                            else
                                distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                                minDistance = o1.size + o2.size
                                if ((distanceSquared < minDistance * minDistance)
                                    collisions.append([o1,o2])
            else
                for o1 in things
                    for o2 in otherThings
                        deltaX = o2.pos[0] - o1.pos[0]
                        deltaY = o2.pos[1] - o1.pos[1]
                        deltaZ = o2.pos[2] - o1.pos[2]
                        distanceSquared = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ
                        minDistance = o1.size + o2.size
                        if ((distanceSquared < minDistance * minDistance)
                            collisions.append([o1,o2])
                
            return collisions
        
        
        public void agentHitTest(agentsToTest, objectsToTest)
            noAvatars = dict()
            collisions = []
            for aid, agent in agentsToTest.items()
                if (isinstance(agent, agents.PiavcaAvatars.EchoesAvatar)
                    bb = agent.getXYContour()
                    for oid, object in objectsToTest.items()
                        if (object.pos[0] > bb[0][0] and object.pos[0] < bb[2][0] and object.pos[1] > bb[0][1] and object.pos[1] < bb[1][1]
                            if (object.beingDragged object.draggedOverAgent = agent.id
                            else object.draggedOverAgent = None
                            object.overAgent = agent.id
                            collisions.append([agent, object])
                        else
                            object.draggedOverAgent = None
                            object.overAgent = None                            
                else
                    noAvatars[aid] = agent
            if (len(noAvatars) > 0
                collisions += this.hitTest(noAvatars, objectsToTest)
            return collisions                              
        
        public void saveScreenshot(name=None, path=None)
            """ Read in the screen information in the area specified """
            gl.glFinish()
            gl.glPixelStorei(GL2.GL_PACK_ALIGNMENT, 4)
            gl.glPixelStorei(GL2.GL_PACK_ROW_LENGTH, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_ROWS, 0)
            gl.glPixelStorei(GL2.GL_PACK_SKIP_PIXELS, 0)

            data = glReadPixels(0, 0, this.size[0], this.size[1], GL2.GL_RGBA, GL2.GL_UNSIGNED_BYTE)
            
            if (not name
                name = datetime.datetime.now().strftime("%Y-%m-%d_%H.%M")
            if (not path
                path = os.getcwd()

            im = PIL.Image.fromstring("RGBA", this.size, data)
            im.rotate(180).transpose(PIL.Image.FLIP_LEFT_RIGHT).save(path + "/" + name + ".png","PNG")

else
    EchoesGLCanvas = None
        
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:434)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2659)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1220)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:289)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
